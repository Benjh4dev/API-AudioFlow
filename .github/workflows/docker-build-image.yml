name: Test and Build Docker Image

on:
  push:
    branches:
      - main
      - develop

jobs:
  test_and_build:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      PORT: ${{ secrets.PORT }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      STORAGE_URL: ${{ secrets.STORAGE_URL }}
      TEST_TEST: ${{ secrets.TEST_TEST }}
      FIREBASE_TYPE: ${{ secrets.FIREBASE_TYPE }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
      FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
      FIREBASE_AUTH_URI: ${{ secrets.FIREBASE_AUTH_URI }}
      FIREBASE_TOKEN_URI: ${{ secrets.FIREBASE_TOKEN_URI }}
      FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}
      FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
      FIREBASE_UNIVERSE_DOMAIN: ${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Start Server
        run: npm start &

      - name: Wait for Server to Start
        run: sleep 10

      - name: Run Tests
        run: npm test

      - name: Create .env file
        run: |
          echo "PORT=${PORT}" > .env
          echo "JWT_SECRET_KEY=${JWT_SECRET_KEY}" >> .env
          echo "STORAGE_URL=${STORAGE_URL}" >> .env
          echo "TEST_TEST=${TEST_TEST}" >> .env

      - name: Create Firebase credentials JSON
        run: |
          echo '{"type": "'${FIREBASE_TYPE}'", "project_id": "'${FIREBASE_PROJECT_ID}'", "private_key_id": "'${FIREBASE_PRIVATE_KEY_ID}'", "private_key": "'${FIREBASE_PRIVATE_KEY}'", "client_email": "'${FIREBASE_CLIENT_EMAIL}'", "client_id": "'${FIREBASE_CLIENT_ID}'", "auth_uri": "'${FIREBASE_AUTH_URI}'", "token_uri": "'${FIREBASE_TOKEN_URI}'", "auth_provider_x509_cert_url": "'${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}'", "client_x509_cert_url": "'${FIREBASE_CLIENT_X509_CERT_URL}'", "universe_domain": "'${FIREBASE_UNIVERSE_DOMAIN}'"}' > credentials.json

      - name: Build and Push Docker Image
        if: success()  
        run: |
          echo $DOCKERHUB_TOKEN | docker login --username $DOCKERHUB_USERNAME --password-stdin
          docker build -t api:latest .
          docker tag api:latest $DOCKERHUB_USERNAME/api-audioflow-test:latest
          docker push $DOCKERHUB_USERNAME/api-audioflow-test:latest
